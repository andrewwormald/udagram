language: node_js
node_js:
  - 13

services:
  - docker

install:
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - mkdir ${HOME}/.kube
  - echo "$KUBE_CONFIG" | base64 --decode > ${HOME}/.kube/config

job:
  include:
  - stage: "Test"
    script: echo "No tests found"
  - stage: "Build"
    name: "Docker build"
    script:
      - docker --version # print the version for logging
      - docker build -t backend-feed ./backend-feed
      - docker tag backend-feed andrewjameswormald/udagram:feed-latest
      - docker build -t backend-user ./backend-user
      - docker tag backend-user andrewjameswormald/udagram:user-latest
      - docker build -t frontend ./frontend
      - docker tag frontend andrewjameswormald/udagram:frontend-latest
      - docker build -t reverseproxy ./deployment
      - docker tag reverseproxy andrewjameswormald/udagram:reverseproxy-latest
    name: "Docker build"
    script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker push andrewjameswormald/udagram:feed-latest
      - docker push andrewjameswormald/udagram:user-latest
      - docker push andrewjameswormald/udagram:frontend-latest
			- docker push andrewjameswormald/udagram:reverseproxy-latest
		- stage: "Deploy"
			name: "Checking pods"
			script:
				- kubectl get pods
			name: "Deploying backend user service"
			script:
				- kubectl rollout restart deployment/backend-user
			name: "Deploying backend feed service"
			script:
				- kubectl rollout restart deployment/backend-feed
			name: "Deploying reverseproxy"
			script:
				- kubectl rollout restart deployment/reverseproxy
			name: "Deploying frontend application"
			script:
				- kubectl rollout restart deployment/frontend
